{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cesar\\\\Desktop\\\\React\\\\rendimiento\\\\src\\\\components\\\\Lists\\\\MyList.js\";\nimport { isEqual } from 'lodash';\nimport { memo } from 'react'; // - Optimizar Li con Memo pasando datos por props\n// const Li = memo(({ fullname }) => {\n//   console.log(`renderizando ${fullname}`)\n//   return (\n//     <li>\n//       {fullname}\n//     </li>\n//   )\n// })\n//const MLi = memo(Li)\n//\n// const MyList = ({ data }) => {\n//   console.log('renderizando lista')\n//   return (\n//     <ul>\n//       {data.map(x =>\n//         <Li\n//           key={x.name + x.lastname}\n//           fullname={`${x.name} ${x.lastname}`}\n//         />\n//       )}\n//     </ul>\n//   )\n// }\n// - Optimizar Li con Memo pasando datos por children\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyList = ({\n  data\n}) => {\n  console.log('renderizando lista');\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.map(x => /*#__PURE__*/_jsxDEV(Li, {\n      children: [x.name, \" \", x.lastname]\n    }, x.name + x.lastname, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyList;\nconst Li = /*#__PURE__*/memo(_c2 = ({\n  children\n}) => {\n  console.log(`renderizando ${children}`);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}, isEqual); //isEqual se encarga de comparar las propiedades\n\n_c3 = Li;\nexport default _c4 = /*#__PURE__*/memo(MyList);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyList\");\n$RefreshReg$(_c2, \"Li$memo\");\n$RefreshReg$(_c3, \"Li\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/Cesar/Desktop/React/rendimiento/src/components/Lists/MyList.js"],"names":["isEqual","memo","MyList","data","console","log","map","x","name","lastname","Li","children"],"mappings":";AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,IAAT,QAAqB,OAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,sBACE;AAAA,cACGF,IAAI,CAACG,GAAL,CAASC,CAAC,iBACT,QAAC,EAAD;AAAA,iBAGGA,CAAC,CAACC,IAHL,OAGYD,CAAC,CAACE,QAHd;AAAA,OACOF,CAAC,CAACC,IAAF,GAASD,CAAC,CAACE,QADlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbD;;KAAMP,M;AAeN,MAAMQ,EAAE,gBAAGT,IAAI,OAAC,CAAC;AAAEU,EAAAA;AAAF,CAAD,KAAkB;AAChCP,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeM,QAAS,EAArC;AACA,sBACE;AAAA,cACGA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPc,EAOZX,OAPY,CAAf,C,CAOY;;MAPNU,E;AASN,kCAAeT,IAAI,CAACC,MAAD,CAAnB","sourcesContent":["import { isEqual } from 'lodash'\nimport { memo } from 'react'\n\n// - Optimizar Li con Memo pasando datos por props\n// const Li = memo(({ fullname }) => {\n//   console.log(`renderizando ${fullname}`)\n//   return (\n//     <li>\n//       {fullname}\n//     </li>\n//   )\n// })\n//const MLi = memo(Li)\n//\n// const MyList = ({ data }) => {\n//   console.log('renderizando lista')\n//   return (\n//     <ul>\n//       {data.map(x =>\n//         <Li\n//           key={x.name + x.lastname}\n//           fullname={`${x.name} ${x.lastname}`}\n//         />\n//       )}\n//     </ul>\n//   )\n// }\n\n\n// - Optimizar Li con Memo pasando datos por children\nconst MyList = ({ data }) => {\n  console.log('renderizando lista')\n  return (\n    <ul>\n      {data.map(x =>\n        <Li\n          key={x.name + x.lastname}\n        >\n          {x.name} {x.lastname}\n        </Li>  \n      )}\n    </ul>\n  )\n}\n\nconst Li = memo(({ children }) => {\n  console.log(`renderizando ${children}`)\n  return (\n    <li>\n      {children}\n    </li>\n  )\n}, isEqual) //isEqual se encarga de comparar las propiedades\n\nexport default memo(MyList)\n"]},"metadata":{},"sourceType":"module"}